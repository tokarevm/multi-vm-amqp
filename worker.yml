---
- hosts: all
  become: yes
  tasks:
    - name: Disable SELinux
      selinux: state=disabled

    - name: Add central host to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '10\.0\.0\.10\ .*'
        line: "10.0.0.10  central.local central"
        state: present

    - name: Change settings for private interface eth1
      lineinfile:
        path: /etc/sysconfig/network-scripts/ifcfg-eth1
        state: present
        regexp: '^NM_CONTROLLED=no'
        line: 'NM_CONTROLLED=yes'
  
    - name: Bring up interface eth1
      shell: ifup eth1

    - name: Get IP address of eth1
      shell: ip addr show eth1 | grep "inet\b" | awk '{print $2}' | cut -d/ -f1
      register: host_ip

    - name: Install zabbix repo
      yum: name=http://repo.zabbix.com/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpm state=present

    - name: Install additional packages
      yum: name="{{ item }}" state=present
      with_items:
        - libselinux-python
        - python2-pika
        - zabbix-agent
        - python-pyzabbix
        - python2-pip
        - python-devel

    - name: Install extra python module for ansible zabbix_host module
      command: pip install zabbix-api

    - name: Configure zabbix agent
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        state: present
        regexp: '^Server='
        line: 'Server=central'

    - name: Start zabbix agent
      service: name=zabbix-agent enabled=yes state=restarted

    - name: Add worker host to zabbix configuration
      local_action:
        module: zabbix_host
        server_url: http://central/zabbix
        login_user: Admin
        login_password: zabbix
        host_name: "{{ ansible_hostname }}"
        host_groups:
          -   Linux servers
        link_templates:
          - Template OS Linux
        status: enabled
        state: present
        inventory_mode: automatic
        interfaces:
          - type: 1
            main: 1
            useip: 1
            ip: "{{ host_ip.stdout }}" 
            dns: ""
            port: 10050

    - name: Create directory for application
      file:
        path: /opt/myapp
        state: directory
        mode: 0755
        owner: vagrant
        group: vagrant

    - name: Copy all needed files for consumer app
      copy:
        src: files/consumer/
        dest: /opt/myapp

    - name: Run consumer
      shell: nohup python -u /opt/myapp/consumer.py > /opt/myapp/consumer.log &
      become: yes
      become_user: vagrant
